AWSTemplateFormatVersion: "2010-09-09"
Transform: "AWS::Serverless-2016-10-31"
Description: "Find a Tutor Courses"

Globals:
  Function:
    Runtime: "python3.8"
    MemorySize: 128
    Timeout: 300
    Environment:
      Variables:
        LOG_LEVEL: "INFO"
        POWERTOOLS_SERVICE_NAME: "find-a-tutor-courses"

Resources:
  ExecutionRoleGetCourseSteps:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: "find-a-tutor-get-course-steps-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      Policies:
        - PolicyName: "Lambda"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "lambda:GetLayerVersion"
                Resource:
                  - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:FindATutor:*"

  GetCourseStepsHandler:
    Type: "AWS::Serverless::Function"
    Properties:
      FunctionName: "find-a-tutor-get-course-steps"
      CodeUri: "../find-a-tutor/handlers/get_course_steps"
      Handler: "get_course_steps.handle"
      Role: !GetAtt ExecutionRoleGetCourseSteps.Arn
      Environment:
        Variables:
          CONN_STRING: "{{resolve:ssm:FindATutorDbConnection:2}}"
      Layers:
        - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:FindATutor:13"

  ExecutionRoleGetCourseNotes:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: "find-a-tutor-get-course-notes-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      Policies:
        - PolicyName: "Lambda"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "lambda:GetLayerVersion"
                Resource:
                  - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:FindATutor:*"

  GetCourseNotesHandler:
    Type: "AWS::Serverless::Function"
    Properties:
      FunctionName: "find-a-tutor-get-course-notes"
      CodeUri: "../find-a-tutor/handlers/get_course_notes"
      Handler: "get_course_notes.handle"
      Role: !GetAtt ExecutionRoleGetCourseSteps.Arn
      Environment:
        Variables:
          CONN_STRING: "{{resolve:ssm:FindATutorDbConnection:2}}"
      Layers:
        - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:FindATutor:13"

  ExecutionRoleGetCourseClasses:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: "find-a-tutor-get-course-classes-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      Policies:
        - PolicyName: "Lambda"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "lambda:GetLayerVersion"
                Resource:
                  - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:FindATutor:*"

  GetCourseClassesHandler:
    Type: "AWS::Serverless::Function"
    Properties:
      FunctionName: "find-a-tutor-get-course-classes"
      CodeUri: "../find-a-tutor/handlers/get_course_classes"
      Handler: "get_course_classes.handle"
      Role: !GetAtt ExecutionRoleGetCourseClasses.Arn
      Environment:
        Variables:
          CONN_STRING: "{{resolve:ssm:FindATutorDbConnection:2}}"
      Layers:
        - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:FindATutor:13"

  ExecutionRoleGetCourseRate:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: "find-a-tutor-get-course-rate-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      Policies:
        - PolicyName: "Lambda"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "lambda:GetLayerVersion"
                Resource:
                  - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:FindATutor:*"

  GetCourseRateHandler:
    Type: "AWS::Serverless::Function"
    Properties:
      FunctionName: "find-a-tutor-get-course-rate"
      CodeUri: "../find-a-tutor/handlers/get_course_rate"
      Handler: "get_course_rate.handle"
      Role: !GetAtt ExecutionRoleGetCourseRate.Arn
      Environment:
        Variables:
          CONN_STRING: "{{resolve:ssm:FindATutorDbConnection:2}}"
      Layers:
        - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:FindATutor:13"

  ExecutionRoleRateCourse:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: "find-a-tutor-rate-course-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      Policies:
        - PolicyName: "Lambda"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "lambda:GetLayerVersion"
                Resource:
                  - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:FindATutor:*"

  RateCourseHandler:
    Type: "AWS::Serverless::Function"
    Properties:
      FunctionName: "find-a-tutor-rate-course"
      CodeUri: "../find-a-tutor/handlers/rate_course"
      Handler: "rate_course.handle"
      Role: !GetAtt ExecutionRoleRateCourse.Arn
      Environment:
        Variables:
          CONN_STRING: "{{resolve:ssm:FindATutorDbConnection:2}}"
      Layers:
        - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:FindATutor:13"

  ExecutionRoleGetCourseReviews:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: "find-a-tutor-get-course-reviews-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      Policies:
        - PolicyName: "Lambda"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "lambda:GetLayerVersion"
                Resource:
                  - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:FindATutor:*"
        - PolicyName: "CognitoIDP"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "cognito-idp:AdminGetUser"
                Resource:
                  - !Sub "arn:aws:cognito-idp:*:${AWS::AccountId}:userpool/*"

  GetCourseReviewsHandler:
    Type: "AWS::Serverless::Function"
    Properties:
      FunctionName: "find-a-tutor-get-course-reviews"
      CodeUri: "../find-a-tutor/handlers/get_course_reviews"
      Handler: "get_course_reviews.handle"
      Role: !GetAtt ExecutionRoleGetCourseReviews.Arn
      Environment:
        Variables:
          CONN_STRING: "{{resolve:ssm:FindATutorDbConnection:2}}"
          USER_POOL_ID: "{{resolve:ssm:FindATutorUserPoolId:1}}"
      Layers:
        - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:FindATutor:13"

  ExecutionRoleGetMainCourseCategories:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: "find-a-tutor-get-main-course-categories-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      Policies:
        - PolicyName: "Lambda"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "lambda:GetLayerVersion"
                Resource:
                  - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:FindATutor:*"
        - PolicyName: "CognitoIDP"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "cognito-idp:AdminGetUser"
                Resource:
                  - !Sub "arn:aws:cognito-idp:*:${AWS::AccountId}:userpool/*"

  GetMainCourseCategoriesHandler:
    Type: "AWS::Serverless::Function"
    Properties:
      FunctionName: "find-a-tutor-get-main-course-categories"
      CodeUri: "../find-a-tutor/handlers/get_main_course_categories"
      Handler: "get_main_course_categories.handle"
      Role: !GetAtt ExecutionRoleGetMainCourseCategories.Arn
      Environment:
        Variables:
          CONN_STRING: "{{resolve:ssm:FindATutorDbConnection:2}}"
          USER_POOL_ID: "{{resolve:ssm:FindATutorUserPoolId:1}}"
      Layers:
        - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:FindATutor:13"
