AWSTemplateFormatVersion: "2010-09-09"
Transform: "AWS::Serverless-2016-10-31"
Description: "Find a Tutor Tutor Courses Classes"

Globals:
  Function:
    Runtime: "python3.8"
    MemorySize: 128
    Timeout: 300
    Environment:
      Variables:
        LOG_LEVEL: "INFO"
        POWERTOOLS_SERVICE_NAME: "find-a-tutor-tutor-courses-classes"

Resources:
  ExecutionRoleGetTutorCourseClasses:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: "find-a-tutor-get-tutor-course-classes-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      Policies:
        - PolicyName: "Lambda"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "lambda:GetLayerVersion"
                Resource:
                  - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:FindATutor:*"

  GetTutorCourseClassesHandler:
    Type: "AWS::Serverless::Function"
    Properties:
      FunctionName: "find-a-tutor-get-tutor-course-classes"
      CodeUri: "../find-a-tutor/handlers/get_tutor_course_classes"
      Handler: "get_tutor_course_classes.handle"
      Role: !GetAtt ExecutionRoleGetTutorCourseClasses.Arn
      Environment:
        Variables:
          CONN_STRING: "{{resolve:ssm:FindATutorDbConnection:2}}"
      Layers:
        - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:FindATutor:19"

  ExecutionRoleDeleteCourseClass:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: "find-a-tutor-delete-course-class-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      Policies:
        - PolicyName: "Lambda"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "lambda:GetLayerVersion"
                Resource:
                  - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:FindATutor:*"

  DeleteCourseClassHandler:
    Type: "AWS::Serverless::Function"
    Properties:
      FunctionName: "find-a-tutor-delete-course-class"
      CodeUri: "../find-a-tutor/handlers/delete_course_class"
      Handler: "delete_course_class.handle"
      Role: !GetAtt ExecutionRoleDeleteCourseClass.Arn
      Environment:
        Variables:
          CONN_STRING: "{{resolve:ssm:FindATutorDbConnection:2}}"
      Layers:
        - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:FindATutor:19"

  ExecutionRoleCreateCourseClassPosts:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: "find-a-tutor-create-course-class-posts-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      Policies:
        - PolicyName: "Lambda"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "lambda:GetLayerVersion"
                Resource:
                  - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:FindATutor:*"

  CreateCourseClassPostsHandler:
    Type: "AWS::Serverless::Function"
    Properties:
      FunctionName: "find-a-tutor-create-course-class-posts"
      CodeUri: "../find-a-tutor/handlers/create_course_class_posts"
      Handler: "create_course_class_posts.handle"
      Role: !GetAtt ExecutionRoleCreateCourseClassPosts.Arn
      Environment:
        Variables:
          CONN_STRING: "{{resolve:ssm:FindATutorDbConnection:2}}"
      Layers:
        - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:FindATutor:19"

  ExecutionRoleUpdateCourseClassPosts:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: "find-a-tutor-update-course-class-posts-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      Policies:
        - PolicyName: "Lambda"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "lambda:GetLayerVersion"
                Resource:
                  - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:FindATutor:*"

  UpdateCourseClassPostsHandler:
    Type: "AWS::Serverless::Function"
    Properties:
      FunctionName: "find-a-tutor-update-course-class-posts"
      CodeUri: "../find-a-tutor/handlers/update_course_class_posts"
      Handler: "update_course_class_posts.handle"
      Role: !GetAtt ExecutionRoleUpdateCourseClassPosts.Arn
      Environment:
        Variables:
          CONN_STRING: "{{resolve:ssm:FindATutorDbConnection:2}}"
      Layers:
        - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:FindATutor:19"

  ExecutionRoleDeleteCourseClassPosts:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: "find-a-tutor-delete-course-class-posts-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      Policies:
        - PolicyName: "Lambda"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "lambda:GetLayerVersion"
                Resource:
                  - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:FindATutor:*"

  DeleteCourseClassPostsHandler:
    Type: "AWS::Serverless::Function"
    Properties:
      FunctionName: "find-a-tutor-delete-course-class-posts"
      CodeUri: "../find-a-tutor/handlers/delete_course_class_posts"
      Handler: "delete_course_class_posts.handle"
      Role: !GetAtt ExecutionRoleDeleteCourseClassPosts.Arn
      Environment:
        Variables:
          CONN_STRING: "{{resolve:ssm:FindATutorDbConnection:2}}"
      Layers:
        - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:FindATutor:19"

  ExecutionRoleDeleteCourseClassPost:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: "find-a-tutor-delete-course-class-post-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      Policies:
        - PolicyName: "Lambda"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "lambda:GetLayerVersion"
                Resource:
                  - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:FindATutor:*"

  DeleteCourseClassPostHandler:
    Type: "AWS::Serverless::Function"
    Properties:
      FunctionName: "find-a-tutor-delete-course-class-post"
      CodeUri: "../find-a-tutor/handlers/delete_course_class_post"
      Handler: "delete_course_class_post.handle"
      Role: !GetAtt ExecutionRoleDeleteCourseClassPost.Arn
      Environment:
        Variables:
          CONN_STRING: "{{resolve:ssm:FindATutorDbConnection:2}}"
      Layers:
        - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:FindATutor:19"

  ExecutionRoleCreateCourseClass:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: "find-a-tutor-create-course-class-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      Policies:
        - PolicyName: "Lambda"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "lambda:GetLayerVersion"
                Resource:
                  - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:FindATutor:*"

  CreateCourseClassHandler:
    Type: "AWS::Serverless::Function"
    Properties:
      FunctionName: "find-a-tutor-create-course-class"
      CodeUri: "../find-a-tutor/handlers/create_course_class"
      Handler: "create_course_class.handle"
      Role: !GetAtt ExecutionRoleCreateCourseClass.Arn
      Environment:
        Variables:
          CONN_STRING: "{{resolve:ssm:FindATutorDbConnection:2}}"
      Layers:
        - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:FindATutor:19"

  ExecutionRoleUpdateCourseClass:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: "find-a-tutor-update-course-class-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      Policies:
        - PolicyName: "Lambda"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "lambda:GetLayerVersion"
                Resource:
                  - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:FindATutor:*"

  UpdateCourseClassHandler:
    Type: "AWS::Serverless::Function"
    Properties:
      FunctionName: "find-a-tutor-update-course-class"
      CodeUri: "../find-a-tutor/handlers/update_course_class"
      Handler: "update_course_class.handle"
      Role: !GetAtt ExecutionRoleUpdateCourseClass.Arn
      Environment:
        Variables:
          CONN_STRING: "{{resolve:ssm:FindATutorDbConnection:2}}"
      Layers:
        - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:FindATutor:19"
